
schema {
    query: Queryy
    mutation: Mutationn
}

type Queryy {
    authorize(token: String!): AuthenticationResult
}

type Mutationn {
    register(email: String!): RegisterResult
    editUser(email: String!): UserOut
}

type AuthenticationResult {
    success: Boolean!
    session: String
    error: String
}

type RegisterResult{
    success: Boolean!
}

type UserOut {
    id: Int
    email: String!
    name_first: String
    name_last: String
    gender: String
    password: String
    password_lastupdate: String
    picture: String
    phone_private: String
    phone_private_verified: Boolean
    phone_work: String
    phone_work_verified: Boolean
    diasabled: Boolean
    created: String
    last_login: String
    last_update: String
    birthdate: String

    roles: [Role]
    permissions: [Permission]
}

type Role {
    id: Int!
    name: String!
    permissions: [Permission]
}

type Permission {
    id: Int!
    name: String!
}

type IdentityProvider {
    id: Int!
    name: String!
    client_id: String!
}

type Application {
    id: Int!
    name: String!
    client_id: String!
}